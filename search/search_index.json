{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83c\udfa5 Video Sync \u00b6 A Python tool to synchronize NSP data with camera recordings. Welcome to the official documentation for video-sync . This tool allows you to synchronize Neural Signal Processing (NSP) data with camera recordings. It processes NEV and NS5 files , aligns timestamps with camera JSON metadata , slices video based on valid frames, and synchronizes audio with video. \ud83d\udcd6 Documentation Overview \u00b6 Installation Configuration Usage Guide Features EMU Camera Serials FAQ License","title":"Home"},{"location":"#video-sync","text":"A Python tool to synchronize NSP data with camera recordings. Welcome to the official documentation for video-sync . This tool allows you to synchronize Neural Signal Processing (NSP) data with camera recordings. It processes NEV and NS5 files , aligns timestamps with camera JSON metadata , slices video based on valid frames, and synchronizes audio with video.","title":"\ud83c\udfa5 Video Sync"},{"location":"#documentation-overview","text":"Installation Configuration Usage Guide Features EMU Camera Serials FAQ License","title":"\ud83d\udcd6 Documentation Overview"},{"location":"configuration/","text":"\u2699\ufe0f Configuration \u00b6 Before running video-sync , you need to configure it using a YAML configuration file. A sample configuration file is provided: cp config.example.yaml config.yaml","title":"Configuration"},{"location":"configuration/#configuration","text":"Before running video-sync , you need to configure it using a YAML configuration file. A sample configuration file is provided: cp config.example.yaml config.yaml","title":"\u2699\ufe0f Configuration"},{"location":"emu-cameras/","text":"\ud83d\udcf7 EMU Camera Serials \u00b6 List of supported EMU camera serial numbers: Camera Serial Position 18486634 F1 23512908 F2 18486644 F3 18486638 B1 23512014 B2 23512906 R1 23512012 R2 23505577 R3 Use these serials when mapping cameras for video synchronization.","title":"EMU Camera Serials"},{"location":"emu-cameras/#emu-camera-serials","text":"List of supported EMU camera serial numbers: Camera Serial Position 18486634 F1 23512908 F2 18486644 F3 18486638 B1 23512014 B2 23512906 R1 23512012 R2 23505577 R3 Use these serials when mapping cameras for video synchronization.","title":"\ud83d\udcf7 EMU Camera Serials"},{"location":"faq/","text":"\u2753 FAQ \u00b6 1. What file formats are supported? \u00b6 video-sync supports NEV, NS5, and JSON files for synchronization. 2. Why does my video output have missing frames? \u00b6 Ensure your FFmpeg installation is up-to-date and that your config.yaml is correctly set. 3. How do I change the output format? \u00b6 Modify the output_format field in your config.yaml : ```yaml output_format: \"mp4\"","title":"FAQ"},{"location":"faq/#faq","text":"","title":"\u2753 FAQ"},{"location":"faq/#1-what-file-formats-are-supported","text":"video-sync supports NEV, NS5, and JSON files for synchronization.","title":"1. What file formats are supported?"},{"location":"faq/#2-why-does-my-video-output-have-missing-frames","text":"Ensure your FFmpeg installation is up-to-date and that your config.yaml is correctly set.","title":"2. Why does my video output have missing frames?"},{"location":"faq/#3-how-do-i-change-the-output-format","text":"Modify the output_format field in your config.yaml : ```yaml output_format: \"mp4\"","title":"3. How do I change the output format?"},{"location":"features/","text":"\ud83c\udfd7\ufe0f Features \u00b6 video-sync provides the following features: \u2714\ufe0f Synchronizes NEV and NS5 files with camera recordings \u2714\ufe0f Slices video based on valid frames \u2714\ufe0f Aligns audio with video for precise synchronization \u2714\ufe0f Supports configurable processing options \u2714\ufe0f Efficient and scalable for large datasets","title":"Features"},{"location":"features/#features","text":"video-sync provides the following features: \u2714\ufe0f Synchronizes NEV and NS5 files with camera recordings \u2714\ufe0f Slices video based on valid frames \u2714\ufe0f Aligns audio with video for precise synchronization \u2714\ufe0f Supports configurable processing options \u2714\ufe0f Efficient and scalable for large datasets","title":"\ud83c\udfd7\ufe0f Features"},{"location":"installation/","text":"\ud83d\udce5 Installation \u00b6 Prerequisites \u00b6 Before installing video-sync , ensure you have the following dependencies: Conda (for environment management) FFmpeg (for video and audio processing) Installing FFmpeg on Linux \u00b6 For Ubuntu/Debian : sudo apt update sudo apt install ffmpeg For RHEL(with EPEL enabled) sudo yum install epel-release sudo yum install ffmpeg Installing video-sync \u00b6 Clone the repository and set up the environment: git clone git@github.com:BCM-Neurosurgery/video-sync.git cd video-sync Create and activate the Conda environment, then install dependencies: conda env create -f environment.yml conda activate videosync pip install .","title":"Installation"},{"location":"installation/#installation","text":"","title":"\ud83d\udce5 Installation"},{"location":"installation/#prerequisites","text":"Before installing video-sync , ensure you have the following dependencies: Conda (for environment management) FFmpeg (for video and audio processing)","title":"Prerequisites"},{"location":"installation/#installing-ffmpeg-on-linux","text":"For Ubuntu/Debian : sudo apt update sudo apt install ffmpeg For RHEL(with EPEL enabled) sudo yum install epel-release sudo yum install ffmpeg","title":"Installing FFmpeg on Linux"},{"location":"installation/#installing-video-sync","text":"Clone the repository and set up the environment: git clone git@github.com:BCM-Neurosurgery/video-sync.git cd video-sync Create and activate the Conda environment, then install dependencies: conda env create -f environment.yml conda activate videosync pip install .","title":"Installing video-sync"},{"location":"license/","text":"\ud83d\udcdc License \u00b6 This project is licensed under the BSD-3-Clause License .","title":"License"},{"location":"license/#license","text":"This project is licensed under the BSD-3-Clause License .","title":"\ud83d\udcdc License"},{"location":"usage/","text":"\ud83d\ude80 Usage Guide \u00b6 Running video-sync \u00b6 Activate the Conda environment and run: conda activate videosync stitch-videos --config path/to/config.yaml Example Command stitch-videos --config config.yaml","title":"Usage"},{"location":"usage/#usage-guide","text":"","title":"\ud83d\ude80 Usage Guide"},{"location":"usage/#running-video-sync","text":"Activate the Conda environment and run: conda activate videosync stitch-videos --config path/to/config.yaml Example Command stitch-videos --config config.yaml","title":"Running video-sync"},{"location":"developer-guide/","text":"\ud83d\udee0\ufe0f Developer Guide \u00b6 Welcome to the Developer Guide for video-sync . This section provides a deep dive into the internal workings of the project, covering: Program Flow : How the tool processes and synchronizes data. Edge Cases : Real-world scenarios and solutions. Contributing : How developers can contribute to the project.","title":"Overview"},{"location":"developer-guide/#developer-guide","text":"Welcome to the Developer Guide for video-sync . This section provides a deep dive into the internal workings of the project, covering: Program Flow : How the tool processes and synchronizes data. Edge Cases : Real-world scenarios and solutions. Contributing : How developers can contribute to the project.","title":"\ud83d\udee0\ufe0f Developer Guide"},{"location":"developer-guide/contributing/","text":"\ud83e\udd1d Contributing Guide \u00b6 Want to contribute? Follow these steps:","title":"Contributing"},{"location":"developer-guide/contributing/#contributing-guide","text":"Want to contribute? Follow these steps:","title":"\ud83e\udd1d Contributing Guide"},{"location":"developer-guide/edge-cases/","text":"\u26a0\ufe0f Edge Cases & Real Examples \u00b6 This section highlights real-world edge cases encountered when synchronizing video and neural data. Each example provides a problem description, a sample JSON snippet, analysis, and a possible solution. 1\ufe0f\u20e3 Frame Counter Anomalies \u00b6 \ud83e\uddd0 Problem \u00b6 In some cases, the JSON metadata file may show frame counters that jump unexpectedly. However, the total frame count remains consistent across multiple verification methods, suggesting that frames are not actually lost. \ud83d\udcc4 Example JSON (Incorrect Frame Sequence) \u00b6 { \"frames\": [ [19393, 19393, 19392, 19393, 19392], [19400, 19400, 19399, 19400, 19399] ] } In this case, the frame IDs jump from 19392 to 19399 , which may indicate a counter issue. \ud83d\udd0d Observations \u00b6 The JSON metadata suggests that frames skip from 19392 \u2192 19399. However, when checking the total number of frames in the JSON: >>> len(yfb_json[\"frame_id\"]) 18000 it still returns 18000 frames, meaning that the frames exist but their numbering is inconsistent. Similarly, probing the corresponding MP4 video file also returns 18000 frames, further confirming that no frames are missing. \ud83d\udcdd Conclusion \u00b6 This issue is not a missing frame problem, but rather a frame counter anomaly. \ud83d\udcc2 Download Reference JSON File \u00b6 You can download the example JSON file here: \ud83d\udce5 Download YFB_20240505_133351.json","title":"Edge Cases"},{"location":"developer-guide/edge-cases/#edge-cases-real-examples","text":"This section highlights real-world edge cases encountered when synchronizing video and neural data. Each example provides a problem description, a sample JSON snippet, analysis, and a possible solution.","title":"\u26a0\ufe0f Edge Cases &amp; Real Examples"},{"location":"developer-guide/edge-cases/#1-frame-counter-anomalies","text":"","title":"1\ufe0f\u20e3 Frame Counter Anomalies"},{"location":"developer-guide/edge-cases/#problem","text":"In some cases, the JSON metadata file may show frame counters that jump unexpectedly. However, the total frame count remains consistent across multiple verification methods, suggesting that frames are not actually lost.","title":"\ud83e\uddd0 Problem"},{"location":"developer-guide/edge-cases/#example-json-incorrect-frame-sequence","text":"{ \"frames\": [ [19393, 19393, 19392, 19393, 19392], [19400, 19400, 19399, 19400, 19399] ] } In this case, the frame IDs jump from 19392 to 19399 , which may indicate a counter issue.","title":"\ud83d\udcc4 Example JSON (Incorrect Frame Sequence)"},{"location":"developer-guide/edge-cases/#observations","text":"The JSON metadata suggests that frames skip from 19392 \u2192 19399. However, when checking the total number of frames in the JSON: >>> len(yfb_json[\"frame_id\"]) 18000 it still returns 18000 frames, meaning that the frames exist but their numbering is inconsistent. Similarly, probing the corresponding MP4 video file also returns 18000 frames, further confirming that no frames are missing.","title":"\ud83d\udd0d Observations"},{"location":"developer-guide/edge-cases/#conclusion","text":"This issue is not a missing frame problem, but rather a frame counter anomaly.","title":"\ud83d\udcdd Conclusion"},{"location":"developer-guide/edge-cases/#download-reference-json-file","text":"You can download the example JSON file here: \ud83d\udce5 Download YFB_20240505_133351.json","title":"\ud83d\udcc2 Download Reference JSON File"},{"location":"developer-guide/program-flow/","text":"\ud83d\udd04 Program Flow \u00b6 This section explains the data processing flow of video-sync .","title":"Program Flow"},{"location":"developer-guide/program-flow/#program-flow","text":"This section explains the data processing flow of video-sync .","title":"\ud83d\udd04 Program Flow"}]}